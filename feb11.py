# -*- coding: utf-8 -*-
"""feb11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sbTXrtsOWry0wRTj9Cgk1pgPro0WPMqU
"""

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def __str__(self):
        return f"{self.name} ({self.age})"

person = Person('Vikas', 22)
print(person)

class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y

point1 = Point(2, 3)
point2 = Point(3, 4)
point3 = Point(2, 3)

print(point1 == point2)
print(point1 == point3)

# Generator Function
def square_numbers(n):
    for i in range(n):
        yield i**2

# Create a generator object
generator = square_numbers(5)

# Print the values generated by the generator
for num in generator:
    print(num)

# Input string
string = "hello world"
# Convert string to list of characters
char_list = list(string)
# Swap characters at index 2 and index 6
char_list[2], char_list[6] = char_list[6], char_list[2]
# Convert list back to string
new_string = "".join(char_list)
# Output new string
print(new_string)

def add(x):          # here, we are creating a function add and passing the parameter
    return x+1       # here, we are returning the passed value by adding 1
def sub(x):          # here, we are creating a function sub and passing the parameter
    return x-1        # here, we are returning the passed value by subtracting 1
def operator(func, x):    # here, we are creating a function and passing the parameter
    temp = func(x)
    return temp
print(operator(sub,10))  # here, we are printing the operation subtraction with 10
print(operator(add,20))   # here, we are printing the operation addition with 20

