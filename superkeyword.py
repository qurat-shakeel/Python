# -*- coding: utf-8 -*-
"""superkeyword.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BWeHT-73o6HADeY99TCQNOak18PqIxro
"""

# super keyword
class parentclass:
  def parent_method(self):
    print("this is the parent method")

class childclass(parentclass):
  def parent_method(self):
    print("harry")
    super().parent_method()
  def child_method(self):
    print("this is the child_method")

    super().parent_method()

child_object = childclass()
child_object.child_method()

class parentclass:
  def parent_method(self):   # this one
    print("this is the parent method1")

class childclass(parentclass):
  def parent_method(self):
    print("harry")
    super().parent_method()

  def child_method(self):
    print("this is the child_method2")

    super().parent_method()


child_object = childclass()
child_object.child_method()
child_object.parent_method()  #first parent method gets invoked

class employee:
  def __init__(self,name,id):
    self.name = name
    self.id = id

class programmer:
  def __init__(self,name, id,lang):
    self.name = name
    self.id = id
    self.lang = lang

rohan = employee("Rohan das", "420")
harry = programmer("harry", "659","python")
print(rohan.name)

class employee:
  def __init__(self,name,id):
    self.name = name
    self.id = id

# sub class
class programmer(employee):
  def __init__(self,name, id,lang):
    super().__init__(name, id)
    self.lang = lang

rohan = employee("Rohan das", "420")
harry = programmer("harry", "659","python")
print(harry.name)
print(harry.id)
print(harry.lang)