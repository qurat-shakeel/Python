# -*- coding: utf-8 -*-
"""accessmodifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FeiIiVnMY3VvOCEW1Bk_m6VyP5zYk5Wa
"""

class Employee:
  def __init__(self):
    self.name = "harry"

a = Employee()
print(a.name)
# by default, all methods are public and publically accessible

class Employee:
  def __init__(self):
    self.__name = "Sam" ## private variable __name

a = Employee()
# print(a.__name)    cannot be accessed directly
print(a._Employee__name) # can be accessed indirectly  , name mangling
print(a.__dir__())

class student:
  def __init__(self):
    self._name = "Harry"

  def _funname(self):   #protected method
   return "codewithharry"

class subject(student):    #inherited class
  pass
obj = student()
obj1 = subject()
print(dir(obj))
 # calling by object of student class
print(obj._name)
print(obj._funname)
# calling by object of subject class
print(obj1._name)
print(obj1._funname)